name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      working-directory: RecipeMate-Server

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: application.properties 생성
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/${{ env.working-directory }}/src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ${GITHUB_WORKSPACE}/${{ env.working-directory }}/src/main/resources/application.properties
        working-directory: ${{ env.working-directory }}

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        working-directory: ${{ env.working-directory }}
        shell: bash

      - name: docker build 가능하도록 환경 설정
        uses: docker/setup-buildx-action@v2.9.1

      - name: docker hub에 로그인
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKERHUB_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        run: |
          docker build --platform linux/amd64 -t codingmy/recipe-mate .
          docker push codingmy/recipe-mate
        working-directory: ${{ env.working-directory }}

  deploy-cd:      
    needs: build
    runs-on: ubuntu-20.04

    steps:
      - name: 도커 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.RELEASE_SERVER_IP }}
          username: ${{ secrets.RELEASE_SERVER_USER }}
          key: ${{ secrets.RELEASE_SERVER_KEY }}
          script: |
            cd ~
            ./deploy.sh
